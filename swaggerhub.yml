swagger: '2.0'
info:
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: >
    ## NOTE: this API definition differs from the original definition released by Swaggerhub at https://app.swaggerhub.com/apis/swagger-hub/registry-api/1.0.46.
     * Operation names were changed to snake case to conform to Transposit's style guide.
    
    # Introduction

    This is the registry API for SwaggerHub. It allows you to access, manage,
    and update your APIs and Domains in SwaggerHub bypassing the Web
    application.


    # Authentication

    Use your personal API Key: you can find it by visiting the [API Key
    page](https://app.swaggerhub.com/settings/apiKey).
  version: 1.0.46
  title: SwaggerHub Registry API
  contact:
    name: SwaggerHub
    url: 'https://swaggerhub.com'
    email: info@swaggerhub.com
host: api.swaggerhub.com
tags:
  - name: APIs
    description: Operations for APIs
  - name: Domains
    description: Operations for Domains
schemes:
  - https
produces:
  - application/json
paths:
  /specs:
    get:
      tags:
        - APIs
        - Domains
      summary: >-
        Retrieves a list of currently defined APIs and Domains in APIs.json
        format
      description: ''
      operationId: search_apis_and_domains
      parameters:
        - name: specType
          in: query
          description: |
            Type of Swagger specs to search:
            * API - APIs only
            * DOMAIN - Domains only
            * ANY - Both APIs and Domains
          required: false
          type: string
          default: ANY
          enum:
            - API
            - DOMAIN
            - ANY
        - name: visibility
          in: query
          description: >
            The visibility of a spec in SwaggerHub:

            * PUBLIC - can be viewed by anyone

            * PRIVATE - can only be viewed by you or your Org and those that you
            are collaborating with or have shared it with

            * ANY - either PUBLIC or PRIVATE
          required: false
          type: string
          default: ANY
          enum:
            - PUBLIC
            - PRIVATE
            - ANY
        - $ref: '#/parameters/state'
        - name: owner
          in: query
          description: >-
            API or Domain owner identifier. Can be username or organization
            name
          required: false
          type: string
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/order'
      responses:
        '200':
          description: A list of APIs and Domains in APIs.json format
          schema:
            $ref: '#/definitions/ApisJson'
      security:
        - TokenSecured: []
  /apis:
    get:
      tags:
        - APIs
      summary: Retrieves a list of currently defined APIs in APIs.json format.
      description: ''
      operationId: search_apis
      parameters:
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/state'
        - name: tag
          in: query
          description: Matches against tags associated with an API
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/order'
      responses:
        '303':
          description: 303 response
          headers:
            Location:
              type: string
      security:
        - TokenSecured: []
  '/apis/{owner}':
    get:
      tags:
        - APIs
      summary: Retrieves an APIs.json listing of all APIs defined for this owner
      description: ''
      operationId: get_owner_apis
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/order'
      responses:
        '200':
          description: A list of APIs in APIs.json format
          schema:
            $ref: '#/definitions/ApisJson'
      security:
        - TokenSecured: []
  '/apis/{owner}/{api}':
    get:
      tags:
        - APIs
      summary: >-
        Retrieves an APIs.json listing for all API versions for this owner and
        API
      operationId: get_api_versions
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
      responses:
        '200':
          description: A list of API versions in APIs.json format
          schema:
            $ref: '#/definitions/ApisJson'
      security:
        - TokenSecured: []
    post:
      tags:
        - APIs
      summary: Saves the provided Swagger definition
      description: >-
        Saves the provided Swagger definition; the owner must match the token
        owner. The version will be extracted from the Swagger definition
        itself.
      operationId: save_definition
      consumes:
        - application/json
        - application/yaml
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
        - name: isPrivate
          in: query
          description: Defines whether the API has to be private
          required: false
          type: boolean
          default: false
        - name: version
          in: query
          description: API version
          required: false
          type: string
        - in: body
          name: definition
          description: The Swagger definition of this API
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Force update
          required: false
          type: boolean
      responses:
        '200':
          description: The API was successfully saved
        '201':
          description: New API was successfully saved
        '205':
          description: The API was successfully saved and should be reloaded
        '400':
          description: The Swagger definition was invalid
        '403':
          description: Maximum number of APIs reached
        '409':
          description: Cannot overwrite a published API version
        '415':
          description: Invalid content type
      security:
        - TokenSecured: []
    delete:
      tags:
        - APIs
      summary: Deletes the specified API
      description: ''
      operationId: delete_api
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
      responses:
        '200':
          description: The API was successfully deleted
        '403':
          description: Access denied
        '404':
          description: The specified API not found
        '409':
          description: The API has published versions and cannot be deleted
      security:
        - TokenSecured: []
  '/apis/{owner}/{api}/.collaboration':
    get:
      tags:
        - APIs
      summary: Gets API's collaboration
      operationId: get_collaboration
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
        - name: expandTeams
          in: query
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: The existing collaboration on an API
          schema:
            $ref: '#/definitions/Collaboration'
      security:
        - TokenSecured: []
    put:
      tags:
        - APIs
      summary: Updates API's collaboration
      operationId: update_collaboration
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Collaboration'
      responses:
        default:
          description: Successfully updated API collaboration
      security:
        - TokenSecured: []
    delete:
      tags:
        - APIs
      summary: Deletes API's collaboration
      operationId: delete_collaboration
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
      responses:
        default:
          description: Successfully deleted a collaboration
      security:
        - TokenSecured: []
  '/apis/{owner}/{api}/{version}':
    get:
      tags:
        - APIs
      summary: Retrieves the Swagger definition for the specified API and version
      description: ''
      operationId: get_definition
      produces:
        - application/json
        - application/yaml
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: The Swagger API in requested format
          schema:
            type: object
            properties: {}
        '404':
          description: The specified API not found
      security:
        - TokenSecured: []
    delete:
      tags:
        - APIs
      summary: Deletes a particular version of the specified API
      description: ''
      operationId: delete_api_version
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: The API version was successfully deleted
        '403':
          description: Access denied
        '404':
          description: The specified API was not found
        '409':
          description: >-
            The API version is published and cannot be deleted or it is the
            only version of this API
      security:
        - TokenSecured: []
  '/apis/{owner}/{api}/{version}/swagger.json':
    get:
      tags:
        - APIs
      summary: >-
        Retrieves the Swagger definition for the specified API and version in
        JSON format
      description: ''
      operationId: get_json_definition
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: The Swagger API in JSON format
          schema:
            type: object
            properties: {}
        '404':
          description: The specified API was not found
      security:
        - TokenSecured: []
  '/apis/{owner}/{api}/{version}/swagger.yaml':
    get:
      tags:
        - APIs
      summary: >-
        Retrieves the Swagger definition for the specified API and version in
        YAML format
      description: ''
      operationId: get_yaml_definition
      produces:
        - application/yaml
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: The Swagger API in YAML format
          schema:
            type: object
            properties: {}
        '404':
          description: The specified API was not found
      security:
        - TokenSecured: []
  '/apis/{owner}/{api}/{version}/.comment':
    get:
      tags:
        - APIs
      summary: Returns comments for the specified API version
      operationId: get_api_comments
      description: >
        Returns all the comments and replies added by collaborators in the
        specified API version.
      parameters:
        - $ref: '#/parameters/apiOwner'
        - $ref: '#/parameters/api'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: A list of comments for the specified API version
          schema:
            type: array
            items:
              $ref: '#/definitions/ClosableComment'
        '204':
          description: No comments were found for the specified API version
        '401':
          description: The access token is missing or invalid
        '403':
          description: Access denied (insufficient user permissions)
        '404':
          description: The specified API or version was not found
      security:
        - TokenSecured: []
  /domains:
    get:
      tags:
        - Domains
      summary: Retrieves a list of currently defined domains in APIs.json format
      operationId: search_domains
      parameters:
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/state'
        - name: tag
          in: query
          description: Matches against tags associated with a domain
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/order'
      responses:
        '303':
          description: 303 response
          headers:
            Location:
              type: string
      security:
        - TokenSecured: []
  '/domains/{owner}':
    get:
      tags:
        - Domains
      summary: Retrieves an APIs.json listing of all domains defined for this owner
      operationId: get_owner_domains
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/order'
      responses:
        '200':
          description: A list of domains in APIs.json format
          schema:
            $ref: '#/definitions/ApisJson'
      security:
        - TokenSecured: []
  '/domains/{owner}/{domain}':
    get:
      tags:
        - Domains
      summary: >-
        Retrieves an APIs.json listing for all domain versions for this owner
        and domain
      operationId: get_domain_versions
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/domain'
      responses:
        '200':
          description: A list of domain versions in APIs.json format
          schema:
            $ref: '#/definitions/ApisJson'
      security:
        - TokenSecured: []
    post:
      tags:
        - Domains
      summary: Saves the provided Swagger definition of a domain
      operationId: save_domain_definition
      consumes:
        - application/json
        - application/yaml
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/domain'
        - name: isPrivate
          in: query
          description: Specifies whether the domain has to be private
          required: false
          type: boolean
          default: false
        - name: version
          in: query
          description: Domain version
          required: true
          type: string
        - in: body
          name: definition
          description: The Swagger definition of this domain
          required: false
          schema:
            type: string
        - name: force
          in: query
          description: Force update
          required: false
          type: boolean
      responses:
        '200':
          description: The domain was successfully saved
        '201':
          description: New domain was successfully saved
        '205':
          description: The domain was successfully saved and should be reloaded
        '403':
          description: Maximum number of domains reached
        '409':
          description: Cannot overwrite a published domain version
        '415':
          description: Invalid content type
      security:
        - TokenSecured: []
    delete:
      tags:
        - Domains
      summary: Deletes the specified domain
      operationId: delete_domain
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/domain'
        - name: force
          in: query
          description: Force update
          required: false
          type: boolean
      responses:
        '200':
          description: The domain was successfully deleted
        '403':
          description: Access denied
        '404':
          description: The specified domain not found
        '409':
          description: The domain has published versions and can not be deleted
        '424':
          description: Cannot delete because there are some dependencies for domain
          schema:
            $ref: '#/definitions/Page'
      security:
        - TokenSecured: []
  '/domains/{owner}/{domain}/{version}':
    get:
      tags:
        - Domains
      summary: Retrieves the Swagger definition for the specified domain and version
      operationId: get_domain_definition
      produces:
        - application/json
        - application/yaml
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/domain'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: The Swagger domain in requested format
          schema:
            type: object
            properties: {}
        '404':
          description: The specified domain was not found
      security:
        - TokenSecured: []
    delete:
      tags:
        - Domains
      summary: Deletes a particular version of the specified domain
      operationId: delete_domain_version
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/domain'
        - $ref: '#/parameters/version'
        - name: force
          in: query
          description: Force update
          required: false
          type: boolean
      responses:
        '200':
          description: The domain version was successfully deleted
        '403':
          description: Access denied
        '404':
          description: The specified domain was not found
        '409':
          description: >-
            The domain version is published and can not be deleted or it is the
            only version of this API
        '424':
          description: Cannot delete because there are some dependencies for domain
          schema:
            $ref: '#/definitions/Page'
      security:
        - TokenSecured: []
  '/domains/{owner}/{domain}/{version}/domain.json':
    get:
      tags:
        - Domains
      summary: >-
        Retrieves the definition for the specified domain and version in JSON
        format
      operationId: get_domain_json_definition
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/domain'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: Definition in JSON format
          schema:
            type: object
            properties: {}
        '404':
          description: The specified domain was not found
      security:
        - TokenSecured: []
  '/domains/{owner}/{domain}/{version}/domain.yaml':
    get:
      tags:
        - Domains
      summary: >-
        Retrieves the definition for the specified domain and version in YAML
        format
      operationId: get_domain_yaml_definition
      produces:
        - application/yaml
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/domain'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: Definition in YAML format
          schema:
            type: object
            properties: {}
        '404':
          description: The specified domain was not found
      security:
        - TokenSecured: []
  '/domains/{owner}/{domain}/{version}/.comment':
    get:
      tags:
        - Domains
      summary: Returns comments for the specified domain version
      operationId: get_domain_comments
      description: >
        Returns all the comments and replies added by collaborators in the
        specified domain version.
      parameters:
        - $ref: '#/parameters/domainOwner'
        - $ref: '#/parameters/domain'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: Comments for the specified domain
          schema:
            type: array
            items:
              $ref: '#/definitions/ClosableComment'
        '204':
          description: No comments were found for the specified domain version
        '401':
          description: The access token is missing or invalid
        '403':
          description: Access denied (insufficient user permissions)
        '404':
          description: The specified domain or version was not found
      security:
        - TokenSecured: []
securityDefinitions:
  TokenSecured:
    type: apiKey
    name: Authorization
    in: header
    description: Specify your SwaggerHub API key found in https://app.swaggerhub.com/settings/apiKey.
parameters:
  apiOwner:
    name: owner
    in: path
    description: API owner (user or organization, case-sensitive)
    required: true
    type: string
  domainOwner:
    name: owner
    in: path
    description: Domain owner (user or organization, case-sensitive)
    required: true
    type: string
  api:
    name: api
    in: path
    description: API name (case-sensitive)
    required: true
    type: string
  domain:
    name: domain
    in: path
    description: Domain name (case-sensitive)
    required: true
    type: string
  version:
    name: version
    in: path
    description: Version identifier (case-sensitive)
    required: true
    type: string
  query:
    name: query
    in: query
    description: Free text query to match
    required: false
    type: string
  state:
    name: state
    in: query
    description: >
      Matches against published state of the spec:

      * UNPUBLISHED - spec is a draft, a work in progress

      * PUBLISHED - spec is a stable version ready for consuming from
      client applications

      * ANY - either PUBLISHED or UNPUBLISHED
    required: false
    type: string
    default: ALL
    enum:
      - ALL
      - PUBLISHED
      - UNPUBLISHED
  page:
    name: page
    in: query
    description: Page to return
    required: false
    type: integer
    default: 0
    format: int32
  limit:
    name: limit
    in: query
    description: Number of results per page
    required: false
    type: integer
    default: 10
    format: int32
  sort:
    name: sort
    in: query
    description: |
      Sort criteria or result set:
      * NAME
      * UPATED
      * CREATED
      * OWNER
    required: false
    type: string
    default: NAME
    enum:
      - NAME
      - UPDATED
      - CREATED
      - OWNER
  order:
    name: order
    in: query
    description: Sort order
    required: false
    type: string
    default: ASC
    enum:
      - ASC
      - DESC
definitions:
  ApisJsonProperty:
    type: object
    properties:
      type:
        type: string
    description: an API property
  ApisJson:
    type: object
    properties:
      name:
        type: string
        example: Default listing
      description:
        type: string
        example: Default registry listing
      url:
        type: string
      created:
        type: string
        format: date-time
      modified:
        type: string
        format: date-time
      specificationVersion:
        type: string
      offset:
        type: integer
        format: int32
      totalCount:
        type: integer
        format: int64
      apis:
        type: array
        items:
          $ref: '#/definitions/ApisJsonApi'
  ApisJsonApi:
    type: object
    properties:
      name:
        type: string
        example: petstore
      description:
        type: string
        example: This is a sample Petstore server.
      tags:
        type: array
        uniqueItems: true
        items:
          type: string
      properties:
        type: array
        items:
          $ref: '#/definitions/ApisJsonProperty'
        example:
          - type: Swagger
            url: 'https://api.swaggerhub.com/apis/username/petstore/1.1'
          - type: X-Version
            value: '1.1'
          - type: X-Created
            value: '2017-01-16T13:39:06Z'
          - type: X-Modified
            value: '2017-01-25T11:48:13Z'
          - type: X-Published
            value: 'true'
          - type: X-Versions
            value: '1.0,*1.1,1.1-oas3'
          - type: X-Private
            value: 'false'
          - type: X-Notifications
            value: 'true'
  User:
    type: object
    description: The user who added a comment
    properties:
      id:
        type: string
        description: User name
        example: alex
      active:
        type: boolean
        description: >
          `true` means an existing user, `false` means the user is inactive
          (for example, deleted)
  Comment:
    type: object
    required:
      - body
      - created
      - id
      - user
    properties:
      id:
        type: string
        description: The unique ID of the comment
        example: '141b0adb-f26a-438b-be78-906445c91a36'
      user:
        $ref: '#/definitions/User'
      created:
        type: string
        format: date-time
        description: The UTC date and time when the comment was added
      modified:
        type: string
        format: date-time
        description: The UTC date and time the when the comment was last edited
      body:
        type: string
        description: Markdown contents of the comment
  ClosableComment:
    allOf:
      - $ref: '#/definitions/Comment'
      - type: object
        properties:
          position:
            type: integer
            format: int32
            description: >
              The line number (zero-based) the comment is associated with.
              For example, if the comment is on line 7 in the editor, `position`=6.
          status:
            type: string
            description: Comment status
            enum:
              - OPEN
              - RESOLVED
          replies:
            type: array
            description: A list of replies to this comment
            items:
              $ref: '#/definitions/Comment'
  Collaboration:
    type: object
    required:
      - hint
    properties:
      owner:
        type: string
        readOnly: true
      owners:
        type: array
        items:
          type: string
      hint:
        $ref: '#/definitions/CollaborationHint'
      members:
        type: array
        items:
          $ref: '#/definitions/CollaborationMembership'
      pendingMembers:
        type: array
        items:
          $ref: '#/definitions/CollaborationMembership'
      teams:
        type: array
        items:
          $ref: '#/definitions/CollaborationTeamMembership'
  CollaborationTeamMembership:
    allOf:
      - $ref: '#/definitions/CollaborationMembership'
      - type: object
        properties:
          members:
            type: array
            items:
              $ref: '#/definitions/CollaborationMember'
  CollaborationHint:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        format: uuid
        description: type identifier of the managed entity
  CollaborationMembership:
    allOf:
      - $ref: '#/definitions/CollaborationMember'
      - type: object
        required:
          - roles
        properties:
          roles:
            type: array
            items:
              type: string
              enum:
                - EDIT
                - COMMENT
                - VIEW
          donotdisturb:
            type: boolean
            readOnly: true
          blocked:
            type: boolean
            readOnly: true
  CollaborationMember:
    type: object
    required:
      - name
    properties:
      uuid:
        type: string
        readOnly: true
      name:
        type: string
      title:
        type: string
        readOnly: true
      startTime:
        type: string
        format: date-time
        readOnly: true
  Page:
    type: object
    properties:
      offset:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      items:
        type: array
        items:
          type: object
          properties: {}
